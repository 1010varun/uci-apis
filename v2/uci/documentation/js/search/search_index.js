var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AdapterController.html",[0,0.901,1,1.111]],["body/controllers/AdapterController.html",[0,1.159,1,1.773,2,1.429,3,0.934,4,0.741,5,0.741,6,2.221,7,2.91,8,2.221,9,0.934,10,0.077,11,0.741,12,2.91,13,0.934,14,0.934,15,0.066,16,0.066]],["title/controllers/AppController.html",[0,0.901,17,1.111]],["body/controllers/AppController.html",[0,1.253,2,1.155,3,0.755,4,0.599,5,0.599,9,1.01,10,0.08,11,0.599,13,0.755,14,0.755,15,0.057,16,0.057,17,1.545,18,1.795,19,0.755,20,1.545,21,2.89,22,2.351,23,1.155,24,2.351,25,1.155,26,2.401,27,1.138,28,1.795,29,1.795,30,2.351,31,1.428,32,2.351]],["title/modules/AppModule.html",[33,1.375,34,1.111]],["body/modules/AppModule.html",[1,1.554,2,1.331,3,0.608,4,0.483,5,0.483,9,1.219,10,0.08,11,0.483,13,0.608,14,0.608,15,0.049,16,0.049,17,1.554,27,1.219,28,1.447,33,1.647,34,1.964,35,1.152,36,1.331,37,1.447,38,1.447,39,1.219,40,2.069,41,1.447,42,1.447,43,1.896,44,2.71,45,1.896,46,1.447,47,1.896,48,1.896,49,1.896,50,1.896,51,1.896,52,1.896,53,1.896]],["title/injectables/AppService.html",[27,0.726,54,0.576]],["body/injectables/AppService.html",[3,0.816,4,0.648,5,0.648,9,0.816,10,0.079,11,0.648,13,0.816,14,0.816,15,0.06,16,0.06,19,0.816,20,1.627,21,2.98,23,1.249,25,1.249,26,2.529,27,1.063,31,1.545,54,0.844,55,1.249,56,1.941,57,2.543,58,2.543,59,2.543]],["title/injectables/PrismaService.html",[39,0.726,54,0.576]],["body/injectables/PrismaService.html",[3,0.619,4,0.491,5,0.491,9,0.88,10,0.08,11,0.491,13,0.619,14,0.619,15,0.05,16,0.05,19,0.619,20,1.347,23,1.347,25,1.347,39,0.88,54,0.699,55,0.947,60,1.472,61,2.743,62,3.192,63,2.999,64,2.743,65,3.819,66,2.743,67,3.478,68,1.928,69,1.472,70,1.472,71,1.171,72,1.472,73,1.472,74,1.928,75,1.171,76,1.928,77,2.743,78,1.928,79,1.928,80,1.928]],["title/injectables/UserService.html",[54,0.576,81,1.375]],["body/injectables/UserService.html",[3,0.341,4,0.27,5,0.27,8,1.941,9,0.707,10,0.08,11,0.27,13,0.341,14,0.341,15,0.032,16,0.032,19,0.341,20,0.853,23,1.478,25,1.377,29,0.811,31,1.703,39,0.816,54,0.442,55,0.522,63,2.945,69,2.297,70,2.297,71,2.142,72,2.297,75,0.645,81,1.055,82,0.811,83,1.736,84,1.736,85,1.736,86,1.736,87,1.062,88,1.062,89,1.062,90,1.681,91,1.062,92,3.312,93,1.062,94,2.201,95,3.526,96,1.736,97,2.201,98,1.062,99,2.803,100,1.736,101,1.062,102,1.736,103,2.542,104,1.062,105,2.542,106,1.736,107,1.062,108,1.062,109,1.062,110,2.201,111,1.736,112,2.201,113,2.201,114,1.062,115,2.201,116,1.062,117,1.736,118,1.062,119,1.062,120,1.062,121,1.062,122,1.062]],["title/coverage.html",[123,1.862]],["body/coverage.html",[0,1.259,1,1.163,5,0.603,6,1.807,10,0.077,15,0.057,16,0.057,17,1.163,18,1.807,27,0.76,39,0.76,54,0.906,56,1.807,60,1.807,71,1.438,81,1.438,82,1.807,123,1.438,124,2.367,125,2.367,126,2.367,127,4.068,128,3.16,129,3.16,130,1.807,131,2.367,132,1.807,133,2.367,134,2.367,135,2.367,136,2.367,137,2.367]],["title/dependencies.html",[36,1.334,138,1.9]],["body/dependencies.html",[10,0.081,11,0.599,15,0.057,16,0.057,36,1.155,46,1.795,75,1.428,90,1.795,139,3.545,140,2.351,141,2.351,142,3.145,143,3.145,144,3.145,145,2.351,146,2.351,147,2.351,148,2.401,149,3.145,150,2.351,151,2.351,152,2.351,153,2.351,154,2.351,155,2.351,156,2.351,157,2.351,158,2.351,159,2.351]],["title/miscellaneous/functions.html",[160,1.451,161,2.073]],["body/miscellaneous/functions.html",[10,0.069,15,0.069,16,0.069,19,1.021,130,2.428,132,3.114,160,2.428,161,2.428,162,3.18]],["title/index.html",[19,0.61,163,1.9,164,1.9]],["body/index.html",[4,0.455,10,0.078,15,0.047,16,0.047,73,1.364,123,1.086,165,1.787,166,1.787,167,2.597,168,1.787,169,1.787,170,1.787,171,1.787,172,1.787,173,1.787,174,1.787,175,3.059,176,1.787,177,1.787,178,1.787,179,1.787,180,3.841,181,1.787,182,1.787,183,3.722,184,1.787,185,1.787,186,2.597,187,1.787,188,1.787,189,1.787,190,1.787,191,2.597,192,2.597,193,1.787,194,1.787,195,1.787,196,2.597,197,2.597,198,1.787,199,1.787,200,1.787,201,1.787,202,1.787,203,1.364,204,1.787,205,1.787,206,1.787,207,1.787,208,1.787,209,1.787,210,1.787,211,1.787,212,1.787,213,1.787,214,1.787,215,1.787,216,1.787,217,1.787,218,1.787,219,1.787,220,1.787,221,1.787]],["title/modules.html",[35,1.862]],["body/modules.html",[10,0.07,15,0.07,16,0.07,34,1.592,35,1.969,203,2.473,222,3.24,223,3.24,224,3.24]],["title/overview.html",[225,2.34]],["body/overview.html",[2,1.307,10,0.072,15,0.062,16,0.062,27,1.209,33,1.617,34,2.064,36,1.676,37,2.032,38,2.032,39,1.209,40,2.604,41,2.032,42,2.032,55,1.307,148,2.032,225,2.032,226,2.661,227,2.661]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":127,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":153,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":129,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":128,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":134,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":133,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":226,"title":{},"body":{"overview.html":{}}}],["1.1.6",{"_index":140,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":227,"title":{},"body":{"overview.html":{}}}],["3",{"_index":148,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["3.0.2",{"_index":155,"title":{},"body":{"dependencies.html":{}}}],["4.13.1",{"_index":150,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":147,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":157,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":139,"title":{},"body":{"dependencies.html":{}}}],["8.2.6",{"_index":145,"title":{},"body":{"dependencies.html":{}}}],["adapter",{"_index":8,"title":{},"body":{"controllers/AdapterController.html":{},"injectables/UserService.html":{}}}],["adapter(userwhereuniqueinput",{"_index":91,"title":{},"body":{"injectables/UserService.html":{}}}],["adaptercontroller",{"_index":1,"title":{"controllers/AdapterController.html":{}},"body":{"controllers/AdapterController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["amazing",{"_index":204,"title":{},"body":{"index.html":{}}}],["app",{"_index":73,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":80,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":17,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":173,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":34,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":27,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":63,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["author",{"_index":214,"title":{},"body":{"index.html":{}}}],["await",{"_index":77,"title":{},"body":{"injectables/PrismaService.html":{}}}],["backers",{"_index":205,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":132,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":224,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":222,"title":{},"body":{"modules.html":{}}}],["building",{"_index":168,"title":{},"body":{"index.html":{}}}],["class",{"_index":14,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["configmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":117,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":88,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdapterController.html":{},"controllers/AppController.html":{}},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"coverage.html":{}}}],["controller('adapter",{"_index":12,"title":{},"body":{"controllers/AdapterController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["controllers/adapter/adapter.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":123,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createuser",{"_index":83,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(data",{"_index":96,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":113,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":99,"title":{},"body":{"injectables/UserService.html":{}}}],["decorators",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["defined",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":84,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(where",{"_index":100,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":36,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":174,"title":{},"body":{"index.html":{}}}],["development",{"_index":182,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":124,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":193,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":169,"title":{},"body":{"index.html":{}}}],["enableshutdownhooks",{"_index":64,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":66,"title":{},"body":{"injectables/PrismaService.html":{}}}],["export",{"_index":13,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["express",{"_index":143,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":61,"title":{},"body":{"injectables/PrismaService.html":{}}}],["fastify",{"_index":144,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["framework",{"_index":167,"title":{},"body":{"index.html":{}}}],["function",{"_index":131,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":161,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":163,"title":{"index.html":{}},"body":{}}],["grow",{"_index":200,"title":{},"body":{"index.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":211,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":218,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":125,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":76,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":67,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":179,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":181,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":207,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":215,"title":{},"body":{"index.html":{}}}],["license",{"_index":221,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":197,"title":{},"body":{"index.html":{}}}],["literal",{"_index":103,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":16,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":152,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":160,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":196,"title":{},"body":{"index.html":{}}}],["mode",{"_index":186,"title":{},"body":{"index.html":{}}}],["module",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":35,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":210,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":216,"title":{},"body":{"index.html":{}}}],["name",{"_index":70,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":175,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":220,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":141,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":142,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":146,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":135,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":166,"title":{},"body":{"index.html":{}}}],["npm",{"_index":180,"title":{},"body":{"index.html":{}}}],["number",{"_index":111,"title":{},"body":{"injectables/UserService.html":{}}}],["onmoduleinit",{"_index":65,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":198,"title":{},"body":{"index.html":{}}}],["optional",{"_index":72,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["orderby",{"_index":115,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":225,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":138,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":69,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["params",{"_index":105,"title":{},"body":{"injectables/UserService.html":{}}}],["please",{"_index":208,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdapterController.html":{}}}],["prisma",{"_index":90,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma.adaptercreateinput",{"_index":97,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.adapterorderbywithrelationinput",{"_index":116,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.adapterupdateinput",{"_index":120,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.adapterwhereinput",{"_index":114,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.adapterwhereuniqueinput",{"_index":92,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.service",{"_index":108,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma/client",{"_index":75,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":62,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":39,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":188,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":165,"title":{},"body":{"index.html":{}}}],["project",{"_index":199,"title":{},"body":{"index.html":{}}}],["promise",{"_index":95,"title":{},"body":{"injectables/UserService.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":209,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":151,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":178,"title":{},"body":{"index.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":15,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":154,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":183,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":156,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":170,"title":{},"body":{"index.html":{}}}],["server",{"_index":171,"title":{},"body":{"index.html":{}}}],["services/prisma.service",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":172,"title":{},"body":{"index.html":{}}}],["skip",{"_index":110,"title":{},"body":{"injectables/UserService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdapterController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":202,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["src/controllers/adapter/adapter.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdapterController.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":130,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/services/adapter.service.ts",{"_index":82,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/adapter.service.ts:10",{"_index":93,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:18",{"_index":107,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:35",{"_index":98,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:41",{"_index":104,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:52",{"_index":101,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:7",{"_index":89,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/prisma.service.ts",{"_index":60,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/services/prisma.service.ts:11",{"_index":68,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/prisma.service.ts:7",{"_index":74,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":184,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":187,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":189,"title":{},"body":{"index.html":{}}}],["started",{"_index":164,"title":{"index.html":{}},"body":{}}],["starter",{"_index":177,"title":{},"body":{"index.html":{}}}],["statements",{"_index":126,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":212,"title":{},"body":{"index.html":{}}}],["string",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["support",{"_index":203,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":223,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":149,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":137,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":136,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":112,"title":{},"body":{"injectables/UserService.html":{}}}],["test",{"_index":192,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":195,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":194,"title":{},"body":{"index.html":{}}}],["tests",{"_index":191,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":201,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":78,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":79,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["this.prisma.adapter.create",{"_index":119,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.adapter.delete",{"_index":122,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.adapter.findmany",{"_index":118,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.adapter.findunique",{"_index":109,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.adapter.update",{"_index":121,"title":{},"body":{"injectables/UserService.html":{}}}],["touch",{"_index":213,"title":{},"body":{"index.html":{}}}],["true",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":219,"title":{},"body":{"index.html":{}}}],["type",{"_index":71,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["typescript",{"_index":176,"title":{},"body":{"index.html":{}}}],["ui",{"_index":158,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":190,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":85,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(params",{"_index":102,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":86,"title":{},"body":{"injectables/UserService.html":{}}}],["users(params",{"_index":106,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":81,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["userwhereuniqueinput",{"_index":94,"title":{},"body":{"injectables/UserService.html":{}}}],["watch",{"_index":185,"title":{},"body":{"index.html":{}}}],["website",{"_index":217,"title":{},"body":{"index.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":206,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdapterController.html":{"url":"controllers/AdapterController.html","title":"controller - AdapterController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdapterController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/adapter/adapter.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                adapter\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('adapter')\nexport class AdapterController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            AdapterController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaService } from './services/prisma.service';\nimport { AdapterController } from './controllers/adapter/adapter.controller';\n\n@Module({\n  imports: [ConfigModule.forRoot({\n    isGlobal: true,\n  })],\n  controllers: [AppController, AdapterController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\n\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/adapter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Adapter\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/adapter.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Adapter\n                        \n                    \n                \n            \n            \n                \n                    \n                    Adapter(userWhereUniqueInput: Prisma.AdapterWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.AdapterWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.AdapterCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.AdapterCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.AdapterWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.AdapterWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Adapter, Prisma } from '@prisma/client';\n\nimport { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async Adapter(\n    userWhereUniqueInput: Prisma.AdapterWhereUniqueInput,\n  ): Promise {\n    return this.prisma.adapter.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.AdapterWhereUniqueInput;\n    where?: Prisma.AdapterWhereInput;\n    orderBy?: Prisma.AdapterOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.adapter.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createUser(data: Prisma.AdapterCreateInput): Promise {\n    return this.prisma.adapter.create({\n      data,\n    });\n  }\n\n  async updateUser(params: {\n    where: Prisma.AdapterWhereUniqueInput;\n    data: Prisma.AdapterUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.adapter.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteUser(where: Prisma.AdapterWhereUniqueInput): Promise {\n    return this.prisma.adapter.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/adapter/adapter.controller.ts\n            \n            controller\n            AdapterController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/adapter.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/platform-fastify : ^8.2.6\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @prisma/client : 3\n        \n            fastify-swagger : ^4.13.1\n        \n            prisma : 3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
