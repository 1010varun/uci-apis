var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.031,1,1.031]],["body/controllers/AppController.html",[0,1.438,1,1.438,2,1.724,3,0.858,4,0.674,5,0.674,6,1.724,7,0.674,8,1.438,9,2.76,10,2.286,11,0.087,12,1.078,13,2.286,14,1.078,15,2.3,16,1.144,17,0.674,18,1.011,19,1.724,20,0.858,21,0.858,22,1.724,23,2.286,24,1.354,25,2.286,26,0.062,27,0.062]],["title/modules/AppModule.html",[28,1.296,29,1.031]],["body/modules/AppModule.html",[1,1.478,2,2.043,3,0.721,4,0.567,5,0.567,11,0.087,16,1.345,17,0.567,18,1.097,19,1.451,20,0.721,21,0.721,26,0.055,27,0.055,28,1.604,29,1.841,30,1.139,31,1.277,32,1.451,33,1.451,34,1.097,35,2.043,36,1.451,37,1.451,38,1.923,39,2.708,40,1.923,41,1.451,42,1.923,43,1.923,44,1.923,45,1.923,46,1.923,47,1.923]],["title/injectables/AppService.html",[18,0.645,48,0.494]],["body/injectables/AppService.html",[3,0.926,4,0.728,5,0.728,7,0.728,8,1.513,9,2.844,11,0.086,12,1.165,14,1.165,15,2.419,16,0.926,17,0.728,18,0.946,20,0.926,21,0.926,24,1.463,26,0.066,27,0.066,48,0.725,49,1.165,50,1.862,51,2.469,52,2.469,53,2.469]],["title/injectables/PrismaService.html",[34,0.645,48,0.494]],["body/injectables/PrismaService.html",[3,0.705,4,0.554,5,0.554,7,0.554,8,1.257,11,0.087,12,1.257,14,1.257,16,1,17,0.554,20,0.705,21,0.705,26,0.055,27,0.055,34,0.786,48,0.602,49,0.887,54,1.418,55,2.665,56,3.096,57,2.865,58,2.665,59,3.693,60,2.665,61,3.368,62,1.88,63,1.418,64,1.418,65,1.114,66,1.418,67,1.418,68,1.88,69,1.114,70,1.88,71,2.665,72,1.88,73,1.88,74,1.88]],["title/injectables/UserService.html",[48,0.494,75,1.296]],["body/injectables/UserService.html",[3,0.391,4,0.307,5,0.307,7,0.307,8,0.801,11,0.087,12,1.379,14,1.286,16,0.806,17,0.307,20,0.391,21,0.391,22,0.786,24,1.616,26,0.035,27,0.035,34,0.73,48,0.384,49,0.492,57,2.815,63,2.205,64,2.205,65,2.025,66,2.205,69,0.618,75,1.006,76,0.786,77,2.477,78,1.698,79,1.698,80,1.698,81,1.698,82,1.042,83,1.042,84,1.042,85,1.62,86,1.042,87,3.214,88,1.042,89,2.148,90,3.417,91,1.698,92,2.148,93,1.042,94,2.727,95,1.698,96,1.042,97,1.698,98,2.477,99,1.042,100,2.477,101,1.698,102,1.042,103,1.042,104,1.042,105,2.148,106,1.698,107,2.148,108,2.148,109,1.042,110,2.148,111,1.042,112,1.698,113,1.042,114,1.042,115,1.042,116,1.042,117,1.042]],["title/coverage.html",[118,1.753]],["body/coverage.html",[0,1.132,1,1.132,5,0.707,6,1.81,11,0.083,18,0.707,26,0.064,27,0.064,34,0.707,48,0.794,50,1.81,54,1.81,65,1.421,75,1.421,76,1.81,118,1.421,119,2.399,120,2.399,121,2.399,122,3.872,123,3.147,124,1.81,125,2.399,126,1.81,127,2.399,128,2.399,129,2.399,130,2.399,131,2.399,132,2.399]],["title/dependencies.html",[31,1.237,133,1.839]],["body/dependencies.html",[11,0.088,17,0.712,26,0.065,27,0.065,31,1.14,41,1.823,69,1.432,85,1.823,134,3.525,135,2.416,136,2.416,137,2.416,138,3.162,139,2.416,140,2.416,141,2.385,142,2.416,143,2.416,144,2.416,145,2.416,146,2.416,147,2.416,148,2.416,149,2.416,150,2.416,151,2.416]],["title/miscellaneous/functions.html",[152,1.387,153,1.979]],["body/miscellaneous/functions.html",[7,0.906,11,0.075,26,0.075,27,0.075,124,2.318,126,2.967,152,2.318,153,2.318,154,3.073]],["title/index.html",[7,0.542,155,1.839,156,1.839]],["body/index.html",[4,0.514,11,0.084,26,0.052,27,0.052,67,1.316,118,1.034,157,1.745,158,1.745,159,2.526,160,1.745,161,1.745,162,1.745,163,1.745,164,1.745,165,1.745,166,1.745,167,2.969,168,1.745,169,1.745,170,1.745,171,1.745,172,3.714,173,1.745,174,1.745,175,3.601,176,1.745,177,1.745,178,2.526,179,1.745,180,1.745,181,1.745,182,1.745,183,2.526,184,2.526,185,1.745,186,1.745,187,1.745,188,2.526,189,2.526,190,1.745,191,1.745,192,1.745,193,1.745,194,1.745,195,1.316,196,1.745,197,1.745,198,1.745,199,1.745,200,1.745,201,1.745,202,1.745,203,1.745,204,1.745,205,1.745,206,1.745,207,1.745,208,1.745,209,1.745,210,1.745,211,1.745,212,1.745,213,1.745]],["title/modules.html",[30,1.753]],["body/modules.html",[11,0.076,26,0.076,27,0.076,29,1.476,30,1.854,195,2.361,214,3.129,215,3.129,216,3.129]],["title/overview.html",[217,2.232]],["body/overview.html",[0,1.218,11,0.078,18,1.073,26,0.068,27,0.068,28,1.53,29,1.912,31,1.557,32,1.947,33,1.947,34,1.073,35,2.49,36,1.947,37,1.947,49,1.218,141,1.947,217,1.947,218,3.301]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":122,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":144,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":127,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":123,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":129,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":128,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":218,"title":{},"body":{"overview.html":{}}}],["1.1.6",{"_index":135,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":141,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["3.0.2",{"_index":146,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":151,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":140,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":148,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":134,"title":{},"body":{"dependencies.html":{}}}],["adapter",{"_index":77,"title":{},"body":{"injectables/UserService.html":{}}}],["adapter(userwhereuniqueinput",{"_index":86,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":196,"title":{},"body":{"index.html":{}}}],["app",{"_index":67,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":74,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":165,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":57,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["author",{"_index":206,"title":{},"body":{"index.html":{}}}],["await",{"_index":71,"title":{},"body":{"injectables/PrismaService.html":{}}}],["backers",{"_index":197,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":126,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":216,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":214,"title":{},"body":{"modules.html":{}}}],["building",{"_index":160,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["configmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":112,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor",{"_index":82,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":83,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":118,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createuser",{"_index":78,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(data",{"_index":91,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":108,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":94,"title":{},"body":{"injectables/UserService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":79,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(where",{"_index":95,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":166,"title":{},"body":{"index.html":{}}}],["development",{"_index":174,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":119,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":185,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":161,"title":{},"body":{"index.html":{}}}],["enableshutdownhooks",{"_index":58,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":60,"title":{},"body":{"injectables/PrismaService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["express",{"_index":138,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":55,"title":{},"body":{"injectables/PrismaService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["framework",{"_index":159,"title":{},"body":{"index.html":{}}}],["function",{"_index":125,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":153,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":155,"title":{"index.html":{}},"body":{}}],["grow",{"_index":192,"title":{},"body":{"index.html":{}}}],["hello",{"_index":52,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":203,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":210,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":120,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":70,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":61,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":48,"title":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":49,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":171,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":173,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":199,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":207,"title":{},"body":{"index.html":{}}}],["license",{"_index":213,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":189,"title":{},"body":{"index.html":{}}}],["literal",{"_index":98,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":143,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":152,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":188,"title":{},"body":{"index.html":{}}}],["mode",{"_index":178,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":202,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":208,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":167,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":212,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":136,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":137,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":139,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":130,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":158,"title":{},"body":{"index.html":{}}}],["npm",{"_index":172,"title":{},"body":{"index.html":{}}}],["number",{"_index":106,"title":{},"body":{"injectables/UserService.html":{}}}],["onmoduleinit",{"_index":59,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":190,"title":{},"body":{"index.html":{}}}],["optional",{"_index":66,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["orderby",{"_index":110,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":217,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":133,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":63,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["params",{"_index":100,"title":{},"body":{"injectables/UserService.html":{}}}],["please",{"_index":200,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":85,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma.adaptercreateinput",{"_index":92,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.adapterorderbywithrelationinput",{"_index":111,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.adapterupdateinput",{"_index":115,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.adapterwhereinput",{"_index":109,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.adapterwhereuniqueinput",{"_index":87,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.service",{"_index":103,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma/client",{"_index":69,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":56,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":34,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":180,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":157,"title":{},"body":{"index.html":{}}}],["project",{"_index":191,"title":{},"body":{"index.html":{}}}],["promise",{"_index":90,"title":{},"body":{"injectables/UserService.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":201,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":142,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":170,"title":{},"body":{"index.html":{}}}],["reset",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":145,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":175,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":147,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":162,"title":{},"body":{"index.html":{}}}],["server",{"_index":163,"title":{},"body":{"index.html":{}}}],["services/prisma.service",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":164,"title":{},"body":{"index.html":{}}}],["skip",{"_index":105,"title":{},"body":{"injectables/UserService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":194,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":124,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/services/adapter.service.ts",{"_index":76,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/adapter.service.ts:10",{"_index":88,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:18",{"_index":102,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:35",{"_index":93,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:41",{"_index":99,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:52",{"_index":96,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/adapter.service.ts:7",{"_index":84,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/prisma.service.ts",{"_index":54,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/services/prisma.service.ts:11",{"_index":62,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/prisma.service.ts:7",{"_index":68,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":176,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":179,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":181,"title":{},"body":{"index.html":{}}}],["started",{"_index":156,"title":{"index.html":{}},"body":{}}],["starter",{"_index":169,"title":{},"body":{"index.html":{}}}],["statements",{"_index":121,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":204,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["support",{"_index":195,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":215,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":149,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":132,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":131,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":107,"title":{},"body":{"injectables/UserService.html":{}}}],["test",{"_index":184,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":187,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":186,"title":{},"body":{"index.html":{}}}],["tests",{"_index":183,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":193,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":72,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":73,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.prisma.adapter.create",{"_index":114,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.adapter.delete",{"_index":117,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.adapter.findmany",{"_index":113,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.adapter.findunique",{"_index":104,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.adapter.update",{"_index":116,"title":{},"body":{"injectables/UserService.html":{}}}],["touch",{"_index":205,"title":{},"body":{"index.html":{}}}],["true",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":211,"title":{},"body":{"index.html":{}}}],["type",{"_index":65,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["typescript",{"_index":168,"title":{},"body":{"index.html":{}}}],["ui",{"_index":150,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":182,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":80,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(params",{"_index":97,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":81,"title":{},"body":{"injectables/UserService.html":{}}}],["users(params",{"_index":101,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":75,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["userwhereuniqueinput",{"_index":89,"title":{},"body":{"injectables/UserService.html":{}}}],["watch",{"_index":177,"title":{},"body":{"index.html":{}}}],["website",{"_index":209,"title":{},"body":{"index.html":{}}}],["world",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":198,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaService } from './services/prisma.service';\n\n@Module({\n  imports: [ConfigModule.forRoot({\n    isGlobal: true,\n  })],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\n\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/adapter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Adapter\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/adapter.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Adapter\n                        \n                    \n                \n            \n            \n                \n                    \n                    Adapter(userWhereUniqueInput: Prisma.AdapterWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.AdapterWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.AdapterCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.AdapterCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.AdapterWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.AdapterWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/adapter.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Adapter, Prisma } from '@prisma/client';\n\nimport { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async Adapter(\n    userWhereUniqueInput: Prisma.AdapterWhereUniqueInput,\n  ): Promise {\n    return this.prisma.adapter.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.AdapterWhereUniqueInput;\n    where?: Prisma.AdapterWhereInput;\n    orderBy?: Prisma.AdapterOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.adapter.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createUser(data: Prisma.AdapterCreateInput): Promise {\n    return this.prisma.adapter.create({\n      data,\n    });\n  }\n\n  async updateUser(params: {\n    where: Prisma.AdapterWhereUniqueInput;\n    data: Prisma.AdapterUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.adapter.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteUser(where: Prisma.AdapterWhereUniqueInput): Promise {\n    return this.prisma.adapter.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/adapter.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @prisma/client : 3\n        \n            prisma : 3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
